pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    // Use Gradle for building
                    sh './gradlew build'
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    // Run unit tests with JUnit
                    sh './gradlew test'
                    // Run integration tests with TestNG
                    sh './gradlew integrationTest'
                }
            }
        }

        stage('Code Analysis') {
            steps {
                // Integrate SonarQube analysis
                withSonarQubeEnv('SonarQube') {
                    sh './gradlew sonarqube'
                }
            }
        }

        stage('Security Scan') {
            steps {
                // Perform security scan with OWASP Dependency-Check
                sh 'dependency-check.sh -s . -f JSON -o scan-results'
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    // Deploy to staging using Jenkins pipeline or Ansible
                    // Replace with your actual deployment commands
                    sh 'echo "Deploying to Staging"'
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    // Run integration tests on staging environment
                    // Replace with actual integration test commands
                    sh 'echo "Running integration tests on Staging"'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    // Deploy to production using Ansible or other tools
                    // Replace with your actual deployment commands
                    sh 'echo "Deploying to Production"'
                }
            }
        }
    }
}
