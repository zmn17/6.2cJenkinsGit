pipeline {
    agent any
    

    stages {
        stage('Build') {
            steps {
                echo "Building using maven"
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo "Testing using JUnit"
            }
            steps {
                archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true

                script {
                    def emailSubject = "Pipeline Status: ${currentBuild.result}"
                    def emailBody = "The Testing log is attached below!"

                    emailext (
                        to: 's222283975@deakin.edu.au',
                        subject: emailSubject,
                        body: emailBody,
                        mimeType: 'text/html',
                        attachmentsPattern: '**/*.log, **/target/*.jar'
                    )
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo "using SonarQube tool to analyse the code."
            }
        }
        
        stage('Security Scan') {
            steps {
                echo "OWASP Dependency-Check Plugin"
            }
            steps {
                archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true

                script {
                    def emailSubject = "Pipeline Status: ${currentBuild.result}"
                    def emailBody = "The Scan's log is attached below!"

                    emailext (
                        to: 's222283975@deakin.edu.au',
                        subject: emailSubject,
                        body: emailBody,
                        mimeType: 'text/html',
                        attachmentsPattern: '**/*.log, **/target/*.jar'
                    )
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo "Deploying to staging in AWS EC2 server"
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo "using JUnit for Integration testing"
            }
        }
        
        stage('Deploy to Production') {
            steps {
               echo "Deploying to production in AWS EC2 server"
            }
        }
    }
}
