pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                sh "mvn clean package"
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                sh "mvn test"
            }
        }
        
        stage('Code Analysis') {
            steps {
               withSonarQubeEnv('SonarQubeServer'){
					sh "sonar-scanner"
				    }
            }
        }
        
        stage('Security Scan') {
            steps {
                sh "dependency-check --project mavenProject --scan . --format HTML"
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'heelo'
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo 'heelo'
            }
        }
        
        stage('Deploy to Production') {
            steps {
               echo 'heelo'
            }
        }
    }
    
    post {
        always {
            archiveArtifacts artifacts: '**/target/*.class', allowEmptyArchive: true
            junit '**/target/test-reports/*.xml'
            archiveArtifacts artifacts: '**/dependency-check-report.html', allowEmptyArchive: true
        }
    }
}
